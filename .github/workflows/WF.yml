name: WorkflowImag
'on':
  push:
    branches:
      - main
      - develop
      - feature
jobs:
  checkstyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: >-
            gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*',
            '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: temurin
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build and run unit tests
        run: |
          ./gradlew checkstyleMain
          ./gradlew checkstyleTest
          ./gradlew checkstyleIntegrationTest
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: >-
            gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*',
            '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: temurin
      - name: Build and run unit tests
        run: |
          chmod +x gradlew
          ./gradlew build
  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: >-
            gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*',
            '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: temurin
      - name: Run application
        run: |
          chmod +x gradlew
          ./gradlew bootJar
          java -jar build/libs/imaginarium-0.0.1-SNAPSHOT.jar &
          ./gradlew integrationTest
  system-tests:
    runs-on: ubuntu-latest
    needs:
      - checkstyle
      - unit-tests
      - integration-tests
    steps:
      - uses: actions/checkout@v3
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: >-
            gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*',
            '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: temurin
      - name: Run application
        run: |
          chmod +x gradlew
          ./gradlew bootJar
          java -jar build/libs/imaginarium-0.0.1-SNAPSHOT.jar &
          ./gradlew systemTest
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: build/libs/imaginarium-0.0.1-SNAPSHOT.jar
      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.6.1
        with:
          paths: |
            ${{ github.workspace }}/**/build/reports/jacoco/prodNormalDebugCoverage/prodNormalDebugCoverage.xml,
            ${{ github.workspace }}/**/build/reports/jacoco/**/debugCoverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          min-coverage-changed-files: 60
  dockerize:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs:
      - system-tests
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: '${{ github.repository }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download JAR Artifact
        uses: actions/download-artifact@v3
        with:
          name: app
          path: build/libs
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: '${{ github.actor }}'
          password: '${{ secrets.GITHUB_TOKEN }}'
      - name: 'Extract metadata (tags, labels) for Docker'
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}'
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: '${{ steps.meta.outputs.tags }}'
          labels: '${{ steps.meta.outputs.labels }}'
      - name: Print link
        run: |
          current_branch=$(git branch --show-current)
          DOCKER_IMAGE="your-docker-registry.com/your-repo"
          merged_image="$DOCKER_IMAGE:$current_branch"
          echo "Docker image address: $merged_image"
  deploy:
    if: github.event_name == 'pull_request' && github.head_ref == 'main'
    runs-on: ubuntu-latest
    needs: dockerize
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Display Docker image name
        run: 'echo Docker image would be: $IMAGE'
        env:
          IMAGE: '${{ github.repository }}:${{ github.head_ref }}"'
      - name: Deploy Application
        run: >
          echo "Deployed to
          https://github.com/MarcusH3/imaginarium/pkgs/container/imaginarium"
